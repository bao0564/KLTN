// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(YourlookContext))]
    [Migration("20241215082129_u_Dbcart")]
    partial class u_Dbcart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.DbAddress", b =>
                {
                    b.Property<int>("IdAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAddress"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdKh")
                        .HasColumnType("int");

                    b.Property<bool>("Idefault")
                        .HasColumnType("bit");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenNguoiNhan")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("customerIdKh")
                        .HasColumnType("int");

                    b.HasKey("IdAddress");

                    b.HasIndex("customerIdKh");

                    b.ToTable("DbAddress");
                });

            modelBuilder.Entity("Data.Models.DbAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmailDn")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsExternalAccount")
                        .HasColumnType("bit");

                    b.Property<string>("MaAdmin")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("NameDn")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PasswordDn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Quyen")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("DbAdmin");
                });

            modelBuilder.Entity("Data.Models.DbAds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Img")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MaAds")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Place")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("DbAds");
                });

            modelBuilder.Entity("Data.Models.DbCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKh")
                        .HasColumnType("int");

                    b.Property<int>("IdSp")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("IdKh");

                    b.HasIndex("IdSp");

                    b.HasIndex("SizeId");

                    b.ToTable("DbCart");
                });

            modelBuilder.Entity("Data.Models.DbCategory", b =>
                {
                    b.Property<int>("IdDm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDm"));

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaDm")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDm")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdDm");

                    b.ToTable("DbCategory");
                });

            modelBuilder.Entity("Data.Models.DbColor", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Img")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MaColor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ColorId");

                    b.ToTable("DbColor");
                });

            modelBuilder.Entity("Data.Models.DbCustomer", b =>
                {
                    b.Property<int>("IdKh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKh"));

                    b.Property<string>("ConfirmPasswords")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Img")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsExternalAccount")
                        .HasColumnType("bit");

                    b.Property<string>("MaKh")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Passwords")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdKh");

                    b.ToTable("DbCustomer");
                });

            modelBuilder.Entity("Data.Models.DbFavoriteProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKh")
                        .HasColumnType("int");

                    b.Property<int>("IdSp")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("customerIdKh")
                        .HasColumnType("int");

                    b.Property<int>("productIdSp")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("customerIdKh");

                    b.HasIndex("productIdSp");

                    b.ToTable("DbFavoriteProduct");
                });

            modelBuilder.Entity("Data.Models.DbGroup", b =>
                {
                    b.Property<int>("IdNhom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNhom"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaNhom")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdNhom");

                    b.ToTable("DbGroup");
                });

            modelBuilder.Entity("Data.Models.DbImg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdSp")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Place")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("IdSp");

                    b.ToTable("DbImg");
                });

            modelBuilder.Entity("Data.Models.DbInforShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Addres")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("DbInforShop");
                });

            modelBuilder.Entity("Data.Models.DbOrder", b =>
                {
                    b.Property<int>("IdDh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDh"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<int?>("DbPaymentPaymentId")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmailKh")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("Giamgia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdKh")
                        .HasColumnType("int");

                    b.Property<int?>("IdVoucher")
                        .HasColumnType("int");

                    b.Property<string>("MaDh")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("ODReadly")
                        .HasColumnType("bit");

                    b.Property<bool>("ODSuccess")
                        .HasColumnType("bit");

                    b.Property<bool>("ODTransported")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("Ship")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTienThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ValueVoucher")
                        .HasColumnType("int");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("customerIdKh")
                        .HasColumnType("int");

                    b.Property<int>("soluong")
                        .HasColumnType("int");

                    b.Property<int>("voucherIdVoucher")
                        .HasColumnType("int");

                    b.HasKey("IdDh");

                    b.HasIndex("DbPaymentPaymentId");

                    b.HasIndex("customerIdKh");

                    b.HasIndex("voucherIdVoucher");

                    b.ToTable("DbOrder");
                });

            modelBuilder.Entity("Data.Models.DbOrderDetail", b =>
                {
                    b.Property<int>("IdCTDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCTDH"));

                    b.Property<string>("AnhSp")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdDh")
                        .HasColumnType("int");

                    b.Property<int>("IdProductDetail")
                        .HasColumnType("int");

                    b.Property<string>("MaCTDH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductDetailIdCTSP")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongSp")
                        .HasColumnType("int");

                    b.Property<int>("orderIdDh")
                        .HasColumnType("int");

                    b.HasKey("IdCTDH");

                    b.HasIndex("ProductDetailIdCTSP");

                    b.HasIndex("orderIdDh");

                    b.ToTable("DbOrderDetail");
                });

            modelBuilder.Entity("Data.Models.DbPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PaymentId");

                    b.ToTable("DbPayment");
                });

            modelBuilder.Entity("Data.Models.DbProduct", b =>
                {
                    b.Property<int>("IdSp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSp"));

                    b.Property<string>("AnhSp")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GiamGia")
                        .HasColumnType("int");

                    b.Property<bool>("IActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IFavorite")
                        .HasColumnType("bit");

                    b.Property<bool>("IFeature")
                        .HasColumnType("bit");

                    b.Property<bool>("IHot")
                        .HasColumnType("bit");

                    b.Property<bool>("ISale")
                        .HasColumnType("bit");

                    b.Property<int>("IdDm")
                        .HasColumnType("int");

                    b.Property<int?>("LuotSold")
                        .HasColumnType("int");

                    b.Property<int?>("LuotXem")
                        .HasColumnType("int");

                    b.Property<string>("MaSp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotaSp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NhomId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceMin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SaoDanhGia")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("categoryIdDm")
                        .HasColumnType("int");

                    b.Property<int?>("groupIdNhom")
                        .HasColumnType("int");

                    b.HasKey("IdSp");

                    b.HasIndex("categoryIdDm");

                    b.HasIndex("groupIdNhom");

                    b.ToTable("DbProduct");
                });

            modelBuilder.Entity("Data.Models.DbProductDetail", b =>
                {
                    b.Property<int>("IdCTSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCTSP"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GiaLoai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdSp")
                        .HasColumnType("int");

                    b.Property<string>("NameColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongBan")
                        .HasColumnType("int");

                    b.HasKey("IdCTSP");

                    b.HasIndex("ColorId");

                    b.HasIndex("IdSp");

                    b.HasIndex("SizeId");

                    b.ToTable("DbProductDetail");
                });

            modelBuilder.Entity("Data.Models.DbSize", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"));

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaSize")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameSize")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("SizeId");

                    b.ToTable("DbSize");
                });

            modelBuilder.Entity("Data.Models.DbUser_Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdKh")
                        .HasColumnType("int");

                    b.Property<int>("IdVoucher")
                        .HasColumnType("int");

                    b.Property<DateTime>("UsedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("customerIdKh")
                        .HasColumnType("int");

                    b.Property<int>("voucherIdVoucher")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("customerIdKh");

                    b.HasIndex("voucherIdVoucher");

                    b.ToTable("DbUser_Voucher");
                });

            modelBuilder.Entity("Data.Models.DbVoucher", b =>
                {
                    b.Property<int>("IdVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVoucher"));

                    b.Property<string>("CreateBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconVoucher")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MaVoucher")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotaVoucher")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("valueMax")
                        .HasColumnType("int");

                    b.Property<int>("valueVoucher")
                        .HasColumnType("int");

                    b.HasKey("IdVoucher");

                    b.ToTable("DbVoucher");
                });

            modelBuilder.Entity("Data.Models.DbAddress", b =>
                {
                    b.HasOne("Data.Models.DbCustomer", "customer")
                        .WithMany("addresses")
                        .HasForeignKey("customerIdKh");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Data.Models.DbCart", b =>
                {
                    b.HasOne("Data.Models.DbColor", "color")
                        .WithMany("carts")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbCustomer", "customer")
                        .WithMany("carts")
                        .HasForeignKey("IdKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbProduct", "product")
                        .WithMany("carts")
                        .HasForeignKey("IdSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbSize", "size")
                        .WithMany("carts")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("color");

                    b.Navigation("customer");

                    b.Navigation("product");

                    b.Navigation("size");
                });

            modelBuilder.Entity("Data.Models.DbFavoriteProduct", b =>
                {
                    b.HasOne("Data.Models.DbCustomer", "customer")
                        .WithMany("favorites")
                        .HasForeignKey("customerIdKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbProduct", "product")
                        .WithMany("favoriteproducts")
                        .HasForeignKey("productIdSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Data.Models.DbImg", b =>
                {
                    b.HasOne("Data.Models.DbProduct", "product")
                        .WithMany("imgs")
                        .HasForeignKey("IdSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("Data.Models.DbOrder", b =>
                {
                    b.HasOne("Data.Models.DbPayment", null)
                        .WithMany("orders")
                        .HasForeignKey("DbPaymentPaymentId");

                    b.HasOne("Data.Models.DbCustomer", "customer")
                        .WithMany("orders")
                        .HasForeignKey("customerIdKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbVoucher", "voucher")
                        .WithMany("dborders")
                        .HasForeignKey("voucherIdVoucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("voucher");
                });

            modelBuilder.Entity("Data.Models.DbOrderDetail", b =>
                {
                    b.HasOne("Data.Models.DbProductDetail", "ProductDetail")
                        .WithMany()
                        .HasForeignKey("ProductDetailIdCTSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbOrder", "order")
                        .WithMany("orderdetails")
                        .HasForeignKey("orderIdDh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductDetail");

                    b.Navigation("order");
                });

            modelBuilder.Entity("Data.Models.DbProduct", b =>
                {
                    b.HasOne("Data.Models.DbCategory", "category")
                        .WithMany("products")
                        .HasForeignKey("categoryIdDm");

                    b.HasOne("Data.Models.DbGroup", "group")
                        .WithMany("products")
                        .HasForeignKey("groupIdNhom");

                    b.Navigation("category");

                    b.Navigation("group");
                });

            modelBuilder.Entity("Data.Models.DbProductDetail", b =>
                {
                    b.HasOne("Data.Models.DbColor", "color")
                        .WithMany("productdetails")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbProduct", "product")
                        .WithMany("detailproducts")
                        .HasForeignKey("IdSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbSize", "size")
                        .WithMany("productdetails")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("color");

                    b.Navigation("product");

                    b.Navigation("size");
                });

            modelBuilder.Entity("Data.Models.DbUser_Voucher", b =>
                {
                    b.HasOne("Data.Models.DbCustomer", "customer")
                        .WithMany("user_vouchers")
                        .HasForeignKey("customerIdKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.DbVoucher", "voucher")
                        .WithMany("user_voucher")
                        .HasForeignKey("voucherIdVoucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("voucher");
                });

            modelBuilder.Entity("Data.Models.DbCategory", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Data.Models.DbColor", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("productdetails");
                });

            modelBuilder.Entity("Data.Models.DbCustomer", b =>
                {
                    b.Navigation("addresses");

                    b.Navigation("carts");

                    b.Navigation("favorites");

                    b.Navigation("orders");

                    b.Navigation("user_vouchers");
                });

            modelBuilder.Entity("Data.Models.DbGroup", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Data.Models.DbOrder", b =>
                {
                    b.Navigation("orderdetails");
                });

            modelBuilder.Entity("Data.Models.DbPayment", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("Data.Models.DbProduct", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("detailproducts");

                    b.Navigation("favoriteproducts");

                    b.Navigation("imgs");
                });

            modelBuilder.Entity("Data.Models.DbSize", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("productdetails");
                });

            modelBuilder.Entity("Data.Models.DbVoucher", b =>
                {
                    b.Navigation("dborders");

                    b.Navigation("user_voucher");
                });
#pragma warning restore 612, 618
        }
    }
}
