
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

    double IDoanhthu = (double)Math.Round(Model.DoanhThu);
    double IPreDoanhthu = (double)Math.Round(Model.PrevDoanhThu);
    double PrevRevenue = Math.Round(((IDoanhthu - IPreDoanhthu) / IPreDoanhthu) * 100);
}
@using KLTN_YourLook.Areas.Admin.Models
@model View_Revenue
<div class="cp0 fs1_5">
    Chào Mừng Đến Với Trang Quản Trị!
</div>
<div class="pd" style="background-color:#fff;margin-left:15px">
    <h5 class="pd-lr ttu" style="">Số liệu tháng @Model.Thang / @Model.Nam:</h5>
    <div class="flspe">
        <div class="bdrdu pd">
			<h6 class="ttu fs1_5" title="Doanh thu tháng trước">Doanh thu @Model.Thangtrc / @Model.NamTrc</h6>
            <div class="fl_center">
                <div class="fs2">@string.Format("{0:N0}", Model.PrevDoanhThu)</div>
            </div>
        </div>
        <div class="bdrdu pd">
			<h6 class="ttu fs1_5" title="Doanh thu tháng chọn">Doanh thu @Model.Thang / @Model.Nam</h6>
            <div class="fl_center">
                <div class="fs2 mg-lr">@string.Format("{0:N0}",Model.DoanhThu)</div>
                @if(Model.DoanhThu > Model.PrevDoanhThu){
                    <i class="fa-solid fa-arrow-up fa-xl" title="Tăng @PrevRevenue % So với tháng @Model.Thangtrc / @Model.NamTrc" style="color: #00db1a;"></i>
                    <div style="color: #00db1a" title="Tăng @PrevRevenue % So với tháng @Model.Thangtrc / @Model.NamTrc">@PrevRevenue %</div>
                }
                else if (Model.DoanhThu < Model.PrevDoanhThu)
                {
                    <i class="fa-solid fa-arrow-down" title="Giảm @PrevRevenue % So với tháng @Model.Thangtrc / @Model.NamTrc" style="color: #da0b0b;"></i>
                    <div style="color: #da0b0b" title="Giảm @PrevRevenue % So với tháng @Model.Thangtrc / @Model.NamTrc"> @PrevRevenue %</div>
                }
                else{

                }
            </div>
            </div>
            <div class="bdrdu pd">
                <h6 class="ttu fs1_5">đơn hàng thành công</h6>
				<div class="fl_center">
					<i class="fa-solid fa-clipboard-list fa-xl" style="color: #2f3640;"></i>
                    <div class="fs2">@Model.DHComplete</div>
                </div>
            </div>
            <div class="bdrdu pd">
                <h6 class="ttu fs1_5"> đơn hàng Hủy</h6>
                <div class="fl_center">
                <i class="fa-solid fa-clipboard fa-xl" style="color: #d63838;"></i>
                    <div class="fs2">@Model.DHHuy</div>
                </div>
            </div>
    </div>
</div>
<div class="cp fl">
    <div style="width:50%">
        <div class="fl_center" style="height:100px;background-color:#2f3640;margin-bottom:10px">
             <h3>biểu đồ </h3>
            <canvas id="doanhThuChart" width="400" height="200"></canvas>

        </div>
        <div class="fl_center" style="height:100px;background-color:#2f3640">
            <h3>đánh giá</h3>
        </div>
    </div>
    @await Component.InvokeAsync("View_Admin_Order");
</div>
<div style="position:fixed;width:150px;bottom:10px; right:10px">
    <div class="bdrdu pd" style="background-color:#000">
        <a href="@Url.Action("CreateNotification","Admin")">Tạo thông báo</a>
    </div>
</div>
@* 
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var labels = @Html.Raw(Json.Serialize(Model.DoanhThuTheoThoiGian.Select(x => x.NgayHoacThang)));
        var data = @Html.Raw(Json.Serialize(Model.DoanhThuTheoThoiGian.Select(x => x.DoanhThu)));

        var ctx = document.getElementById('doanhThuChart').getContext('2d');
        var doanhThuChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: data,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.3
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return value.toLocaleString() + ' đ';
                            }
                        }
                    }
                }
            }
        });
    </script> *@